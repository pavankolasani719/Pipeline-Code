pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the Git repository
                checkout([$class: 'GitSCM', branches: [[name: 'main']], userRemoteConfigs: [[url: 'https://github.com/digitaledify/lms-public']]])
            }
        }

        stage('Read Files') {
    steps {
        script {
            def workspace = pwd()
            def webapp = "${workspace}/webapp"
            def packageLockJson = "$webapp/package-lock.json"  // Changed variable name here

            if (fileExists(webapp)) {
                def webappContent = readFile(file: packageLockJson).trim()  // Changed variable name here
                echo "package-lock.json:"
                echo webappContent  // Changed variable name here
            } else {
                echo "The 'webapp' folder does not exist in the repository."
            }
        }
    }
}

        

        stage('SonarQube Analysis') {
    steps {
        script {
            def scannerHome = tool 'SonarScanner';
            def scannerBin = "${scannerHome}\\bin\\sonar-scanner.bat" // Use .bat extension for Windows
            def scannerArgs = """
                -Dsonar.projectKey=myProjectKey
                -Dsonar.sources=.
                -Dsonar.host.url=http://your-sonarqube-server:9000
                -Dsonar.login=your-sonarqube-token
            """.stripIndent() // Customize with your SonarQube details
            
bat(script: "C:\\ProgramData\\Jenkins\\.jenkins\\tools\\hudson.plugins.sonar.SonarRunnerInstallation\\SonarScanner\\bin\\sonar-scanner.bat ${scannerArgs}", returnStatus: true)        }
    }
}

        }
    }

    post {
        always {
            // Clean up workspace after the job is done
            cleanWs()
        }
    }
